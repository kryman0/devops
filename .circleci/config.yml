# Python CircleCI 2.0 configuration file.
version: 2.1

jobs:
  build:
    machine: 
        image: ubuntu-2004:202010-01

    steps:
      # Step 1: obtain repo from GitHub.
      -
        checkout
      
      # Step 2: create virtual env and install deps.
      -
        run:
          name: install dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            make install-dev
            
      # Step 3: run linter and tests.
      -
        run:
          name: run tests
          command: |
            source venv/bin/activate
            make test
      
      # Step 4: If all tests succeeds, build the production
      # docker image and push it to dockerhub.
      -
        run:
          name: build and push docker image
          command: |
            docker login -u kryman -p $DOCKER_PASSWORD
            docker build -t kryman/microblog:latest -f docker/Dockerfile_prod .
            docker push kryman/microblog:latest

  deploy_appServer:
    machine: 
        image: ubuntu-2004:202010-01
    steps:
      # Deploy appServer.
      - checkout
      - 
        add_ssh_keys:
          fingerprints:
            - "b7:35:a6:4e:9b:0d:6d:d4:78:1e:9a:97:2a:66:6b:be"
      -
        run:
          name: Install venv environment.
          command: python3 -m venv .venv
      -
        run: 
          name: Activate venv in each step.
          command: echo "source .venv/bin/activate" >> $BASH_ENV
      -
        run:
          name: Install dependencies for deployment.
          command: make install-deploy
      -
        run:
          name: Deploy appServer via Ansible.
          command: |
            cd ansible
            ansible-playbook -vvv gather_vm_instances.yml app_server.yml


workflows:
  version: 2.1  
  test_and_build-docker:
    jobs:
      - 
        build:
          context: all_projects
          filters:
            branches:
              only: master
      -
        deploy_appServer:
          requires:
            - build