-
  name: Set root password
  user:
    name: root
    password: "{{ root_password }}"

-
  name: Uninstall old versions
  shell: |
    apt-get remove docker docker-engine docker.io containerd runc
  args:
    executable: /bin/bash
    warn: no
  ignore_errors: yes

-
  name: Set up the repository 1/2.
  apt:
    force_apt_get: yes
    update_cache: yes
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    install_recommends: yes

-
  name: Set up the repository 2/2.
  shell: |
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/debian \
    $(lsb_release -cs) \
    stable"
  args:
    executable: /bin/bash
    warn: no

-
  name: Install Docker Engine.
  apt:
    force_apt_get: yes
    update_cache: yes
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    install_recommends: yes

-
  name: Pull the microblog container.
  shell: docker pull kryman/microblog:latest

-
  name: Stop the container if it's running.
  command: docker stop microblog
  ignore_errors: yes  

-
  name: Remove all stopped containers .
  command: docker container prune -f  
  register: removed_container
-
  name: Start the microblog container.
  shell: |
    docker run --restart=always --name microblog -d -p 8000:5000 \
    -e DATABASE_URL=mysql+pymysql://microblog:{{ lookup('env', 'MYSQL_PASSWORD') }}@{{ groups.database[0] }}/microblog \
    kryman/microblog:latest
  args:
    executable: /bin/bash
  # when: removed_container is failed
