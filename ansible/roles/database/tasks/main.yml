-
  name: Set root password
  user:
    name: root
    password: "{{ root_password }}"

-
  name: Uninstall old versions
  shell: |
    apt-get remove docker docker-engine docker.io containerd runc
  args:
    executable: /bin/bash
    warn: no
  ignore_errors: yes

-
  name: Set up the repository 1/2.
  apt:
    force_apt_get: yes
    update_cache: yes
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    install_recommends: yes

-
  name: Set up the repository 2/2.
  shell: |
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/debian \
    $(lsb_release -cs) \
    stable"
  args:
    executable: /bin/bash
    warn: no

-
  name: Install Docker Engine.
  apt:
    force_apt_get: yes
    update_cache: yes
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    install_recommends: yes
  
# -
#   name: Create a volume to map to docker container.
#   file:
#     path: /home/{{ deploy_user }}/data/mysql/dbs/microblog
#     state: directory

-
  name: Pull the MySQL Docker container.
  shell: docker pull mysql:latest

-
  name: Prune the containers.
  shell: docker container prune -f

-
  name: Stop the container if it's running.
  command: docker stop mysql
  args:
    warn: no
  ignore_errors: yes

-
  name: Copy the configration file.
  copy:
    src: files/my.cnf
    dest: /home/deploy/mysql_custom.cnf
  # register: copied_conf

-
  name: Start the MySQL Docker container.
  shell: |    
    docker run --restart=always --name mysql --ip={{ groups.database[0] }} -d -p 3306:3306 \
    -v /home/{{ deploy_user }}/data/mysql/dbs/microblog:/var/lib/mysql -v /home/{{ deploy_user }}:/etc/mysql/conf.d \
    -e MYSQL_DATABASE=microblog -e MYSQL_USER=microblog -e MYSQL_PASSWORD={{ lookup('env', 'MYSQL_PASSWORD') }} \
    -e MYSQL_ROOT_PASSWORD={{ lookup('env', 'MYSQL_ROOT_PASSWORD') }} mysql:latest
  args:
    executable: /bin/bash
  # when: copied_conf is succeeded

# -
#   name: To reconnect to the database due to connection breaks.
#   shell: docker exec -it mysql mysql -umicroblog -p{{ lookup('env', 'MYSQL_PASSWORD') }} -Dmicroblog -e "select * from user;"