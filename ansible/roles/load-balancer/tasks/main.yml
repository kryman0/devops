# -
#   name: Set root password
#   user:
#     name: root
#     password: "{{ root_password }}"

# -   name: Install packages
#     apt:
#         name: 
#           - nginx
#           - python-certbot-nginx
#         state: present

# -   name: Check if certificate already exists.
#     stat:
#         path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
#     register: letsencrypt_cert

# -   debug: msg="{{ letsencrypt_cert.stat.exists }}"

# -   name: Stop services to allow certbot to generate a cert.
#     command: service nginx stop
#     when: not letsencrypt_cert.stat.exists

# -   name: Generate new certificate if one doesn't exist.
#     shell: |
#       certbot certonly --standalone --noninteractive --expand --agree-tos \
#       --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}
#     when: not letsencrypt_cert.stat.exists

# -   name: Remove default conf
#     file:
#         state: absent
#         path: /etc/nginx/sites-enabled/default.conf
#     ignore_errors: yes

# -
#   name: Setup nginx.conf.
#   template:
#     src: ../templates/nginx.conf.j2
#     dest: /etc/nginx/nginx.conf

# -
#   name: Create directories in /etc/nginx/.
#   shell: mkdir /etc/nginx/sites-available /etc/nginx/sites-enabled

-  
  name: Setup load-balancer.conf.  
  template:
    src: ../templates/load-balancer.conf.j2
    dest: /etc/nginx/sites-available/load-balancer.conf

# -
#   name: Create a symbolic link from load-balancer.conf to the sites-enabled folder.
#   file:
#     src: /etc/nginx/sites-available/load-balancer.conf
#     path: /etc/nginx/sites-enabled/load-balancer.conf
#     state: link

-
  name: Restart nginx.
  systemd: 
    enabled: yes
    name: nginx
    state: reloaded