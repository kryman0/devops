# -
#   name: Install the prerequisites to nginx.
#   apt:
#     force_apt_get: yes
#     update_cache: yes
#     name:
#       - curl 
#       - gnupg2 
#       - ca-certificates 
#       - lsb-release
#     install_recommends: yes

# -
#   name: Set up the apt repository for stable nginx packages.
#   shell: |
#     echo "deb http://nginx.org/packages/debian `lsb_release -cs` nginx" \
#     | tee /etc/apt/sources.list.d/nginx.list
#     curl -fsSL https://nginx.org/keys/nginx_signing.key | apt-key add -
#   args:
#     executable: /bin/bash
#     warn: no

# -
#   name: Import an official nginx signing key so apt could verify the packages authenticity.
#   shell: curl -fsSL https://nginx.org/keys/nginx_signing.key | apt-key add -

-
  name: Set root password
  user:
    name: root
    password: "{{ root_password }}"

-   name: Install packages
    apt:
        name: 
          - nginx
          - python-certbot-nginx
        state: present

-   name: Check if certificate already exists.
    stat:
        path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
    register: letsencrypt_cert

-   debug: msg="{{ letsencrypt_cert.stat.exists }}"

-   name: Stop services to allow certbot to generate a cert.
    command: service nginx stop
    when: not letsencrypt_cert.stat.exists

-   name: Generate new certificate if one doesn't exist.
    shell: |
      certbot certonly --standalone --noninteractive --expand --agree-tos \
      --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}
    when: not letsencrypt_cert.stat.exists

-   name: Remove default conf
    file:
        state: absent
        path: /etc/nginx/sites-enabled/default.conf
    ignore_errors: yes


# -
#   name: Install nginx.
#   apt:
#     force_apt_get: yes
#     update_cache: yes
#     name: nginx

# -
#   name: Start nginx.
#   shell: nginx

# -
#   name: Setup nginx.conf.
#   template:
#     src: ../templates/nginx.conf.j2
#     dest: /etc/nginx/nginx.conf

# -
#   name: Create directories in /etc/nginx/.
#   shell: mkdir /etc/nginx/sites-available /etc/nginx/sites-enabled

-  
  name: Setup load-balancer.conf.  
  template:
    src: ../templates/load-balancer.conf.j2
    dest: /etc/nginx/sites-available/load-balancer.conf

-
  name: Create a symbolic link from load-balancer.conf to the sites-enabled folder.
  file:
    src: /etc/nginx/sites-available/load-balancer.conf
    path: /etc/nginx/sites-enabled/load-balancer.conf
    state: link

-
  name: Restart nginx.
  shell: service nginx restart